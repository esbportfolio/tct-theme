// MODULES

@use 'sass:color';
@use "sass:map";

// SASS FUNCTIONS

// Lighten a color by a percent
@function tint($color, $percentage) {
    @return color.mix(white, $color, $percentage);
}

// Darken a color by a percent
@function shade($color, $percentage) {
    @return color.mix(black, $color, $percentage);
}

// Get the contrasting text color in white or black
@function contrast-text($color) {
    @if (color.channel($color, "lightness", $space: hsl) > 50) {
        @return #000;
    } @else {
        @return #fff;
    }
}

// SASS VARIABLES

$tct-green: #00a56a;
$tct-red: #ee4a25;
$tct-yellow: #e6a622;
$tct-blue: #0066a3;
$tct-tan: #f3edd7;
$tct-dk-green: #153128;

// LISTS AND MAPS

$breakpoints: (
    'sm': 600px,
    'md': 768px,
    'lg': 992px,
    'xl': 1200px
);

$style-parts: (
    'background-color': 'bg',
    'border': 'border',
    'color': 'txt'
);

$theme-colors: (
    'green': $tct-green,
    'red': $tct-red,
    'yellow': $tct-yellow,
    'blue': $tct-blue,
    'tan': $tct-tan,
    'dk-green': $tct-dk-green,
    'white': #fff,
    'black': #000
);

$context-colors: (
    'success': $tct-green,
    'warning': $tct-yellow,
    'danger': $tct-red,
    'info': $tct-blue
);

/************ FONTS ************/

@font-face {
    font-family: 'Prompt';
    src: url("../assets/font-prompt/Prompt-Regular.ttf");
    font-weight: 500;
    font-style: normal;
}

@font-face {
    font-family: 'Prompt';
    src: url("../assets/font-prompt/Prompt-Italic.ttf");
    font-weight: 500;
    font-style: italic;
}

@font-face {
    font-family: 'Prompt';
    src: url("../assets/font-prompt/Prompt-Bold.ttf");
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: 'Prompt';
    src: url("../assets/font-prompt/Prompt-BoldItalic.ttf");
    font-weight: 700;
    font-style: italic;
}

@font-face {
    font-family: 'Prompt';
    src: url("../assets/font-prompt/Prompt-Light.ttf");
    font-weight: 300;
    font-style: normal;
}

@font-face {
    font-family: 'Prompt';
    src: url("../assets/font-prompt/Prompt-LightItalic.ttf");
    font-weight: 300;
    font-style: italic;
}

@font-face {
    font-family: 'Arvo';
    src: url("../assets/font-arvo/Arvo-Regular.ttf");
    font-weight: 500;
    font-style: normal;
}

@font-face {
    font-family: 'Arvo';
    src: url("../assets/font-arvo/Arvo-Italic.ttf");
    font-weight: 500;
    font-style: italic;
}

@font-face {
    font-family: 'Arvo';
    src: url("../assets/font-arvo/Arvo-Bold.ttf");
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: 'Arvo';
    src: url("../assets/font-arvo/Arvo-BoldItalic.ttf");
    font-weight: 700;
    font-style: italic;
}

/************ BASE STYLES ************/

body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    font-size: 1em;
    font-family: 'Prompt', Verdana, sans-serif;
    font-weight: 500;
    box-sizing: border-box;
}

footer {
    margin-top:auto;
    padding-top: 1rem;
}

h1, h2, h3, h4, h5, h6 {
    font-family: 'Arvo', Garamond, serif;
    font-weight: 700;
}

a {
    color: $tct-blue;
}

a:hover {
    text-decoration: none;
}

/************ RESPONSIVE LAYOUT ************/

/* Responsive display classes */

@each $breakpoint, $size in $breakpoints {
    .display-min-#{$breakpoint} {
        display: none;
    }

    @media only screen and (min-width: #{$size}) {
        .display-min-#{$breakpoint} {
            display: unset;
        }

        .display-max-#{$breakpoint} {
            display: none;
        }
    }
}

/* Mobile-first */
.container {
    width: 90%;
    margin: auto;
}

/* Small */
@media only screen and (min-width: map.get($breakpoints, "sm")) {
    .container {
        width: 80%;
    }
}

/* Medium */
@media only screen and (min-width: map.get($breakpoints, "md")) {
    .container {
        width: 70%;
    }
}

/* Large */
@media only screen and (min-width: map.get($breakpoints, "lg")) {
    .container {
        width: 60%;
    }
}

/************ NAVIGATION ************/

nav {
    ul {
        margin: 0;
        list-style-type: none;
    }

    li {
        margin: 0;
    }

    a {
        color: inherit;
        text-decoration: none;
    }
}

#primary-menu {

    &.expanded {
        border-bottom: 0.5rem solid $tct-green;
    }

    ul {
        padding: 0 1rem;
    }

    li.active {
        color: $tct-green;
        font-weight: bold;
    }

    /* Resets font for dropdown items so only the active one is colored */
    li.active ul {
        color: #000;
        font-weight: normal;
    }

    .toggler {
        padding: 0.5rem 0;
        background-color: $tct-green;
        text-align: center;
        
        button {
            background-color: #fff;
            border: 1px solid $tct-dk-green;
            border-radius: 0.25rem;
        }
    }

    #toggler-content {
        flex: 0 1 100%;
        overflow: hidden;
        transition: height 0.3s ease-out;
    }

    .hide {
        height: 0;
    }

    .show {
        height: var(--openHeight);
    }

}

/* Nav on medium and larger screens */
@media only screen and (min-width: map.get($breakpoints, "md")) {
    
    #primary-menu {

        border-width: 0.5rem 0;
        border-color: $tct-green;
        border-style: solid;

        ul:first-child {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 1rem;
            padding: 0.25rem 0;
        }

        a:hover {
            color: $tct-green;
            text-decoration: underline;
        }

        .dropdown {
            display: none;
            width: 12rem;
            padding: 0.5rem;
            background-color: #fff;
            border: 1px solid $tct-green;
            border-radius: 0.5rem;
        }

        .dropdown-toggle {

            &:hover .dropdown {
                display: block;
                position: absolute;
            }

        }

        .toggler {
            display: none;
        }

        .hide, 
        .show {
            height: auto;
        }

    }

}

// /************ BUTTONS AND ALERTS ************/

// @each $meaning, $color in $context-colors {
    
//     .alert.#{$meaning} {
//         color: shade($color, 75%);
//         background-color: tint($color, 75%);
//         border: 1px solid $color;
//         border-radius: 0.5rem;
//         padding: 0.25rem 0.5rem;
//         margin: 1rem auto;
//     }

//     button.#{$meaning} {
//         color: contrast-text($color);
//         background-color: $color;
//         border: 1px solid shade($color, 50%);
//         border-radius: 0.5rem;
//         padding: 0.25rem 0.5rem;
//         font-weight: bold;
//         text-transform: uppercase;
//     }

//     button.#{$meaning}:hover {
//         background-color: tint($color, 25%);
//         transition: 0.3s;
//     }
// }

/************ THEME COMPONENTS   ************/

/* General Theme Components */

.banner {
    background-color: $tct-tan;
}

/* Posts */

.post h1,
.post h3 {
    margin-bottom: 0;
}

.preview {
    border-bottom: 10px solid $tct-yellow;
}

.preview:last-of-type {
    border: 0;
}

.post-link {
    color: inherit;
    text-decoration: none;

    &:hover {
        color: $tct-blue;
        text-decoration: underline;
    }
}

.post-date {
    margin: 0;
}

.post-tag {
    margin-top: 0;

    a {
        margin-right: 0.5rem;
        padding: 0 0.5rem;
        background-color: $tct-blue;
        border-radius: 0.25rem;
        color: #fff;
        text-decoration: none;
        font-weight: bold;

        &:hover {
            background-color: shade($tct-blue, 25%);
            transition: 0.3s;
        }
    }
}

.category {
    color: tint(#000, 25%);
    font-style: italic;
    
    a {
        color: inherit;
        text-decoration: none;

        &:hover {
            text-decoration: underline;
        }
    }
}

.post-nav {
    display: flex;
    justify-content: space-between;
    .disabled {
        color: tint(#000, 50%);
    }
}

/* Pagination */

.pagination {
    ul {
        padding: 0;
        display: flex;
    }

    li {
        min-width: 2rem;
        padding: 0.25rem 0.5rem;
        border-width: 1px 1px 1px 0px;
        border-style: solid;
        border-color: tint(#000, 25%);
        min-width: 2rem;
        text-align: center;

        &.prev {
            border-radius: 0.25rem 0 0 0.25rem;
            border-left-width: 1px;
            padding-left: 0;
        }

        &.next {
            border-radius: 0 0.25rem 0.25rem 0;
            padding-right: 0;
        }

        &.active {
            background-color: $tct-green;
            color: #fff;
            font-weight: bold;
        }

        &.disabled {
            background-color: tint(#000, 90%);
            color: tint(#000, 25%);
        }

        &.gap {
            border-width: 0 1px 0 0;
        }
    }
}

/* Responsive Components */

.logo-banner {
    display: flex;
    justify-content: center;
    
    img {
        height: 5rem;
        padding: 2.5rem 0;
    }
}

.flower-border {
    height: 2rem;
    background-image: url("../assets/img/border.png");
    background-repeat: repeat-x;
    background-position: bottom center;
    background-size: cover;
}

/* Small */
@media only screen and (min-width: map.get($breakpoints, "sm")) {
    .flower-border {
        background-size: contain;
    }
}

/* Medium */
@media only screen and (min-width: map.get($breakpoints, "md")) {
    .logo-banner img {
        height: 6rem;
        padding: 3rem 0;
    }
}

/* Large */
@media only screen and (min-width: map.get($breakpoints, "lg")) {
    .logo-banner img {
        height: 7rem;
        padding: 3.5rem 0;
    }
}

/* Extra-large */
@media only screen and (min-width: map.get($breakpoints, "xl")) {
    .logo-banner img {
        height: 8rem;
        padding: 4rem 0;
    }
}


// /************ COLORS / STYLES ************/

// @each $label, $color in $theme-colors {

//     @each $attribute, $prefix in $style-parts {
//         .#{$prefix}-#{$label} {
//             #{$attribute}: #{$color};
//         }
//     }

// }

// .txt-bold {
//     font-weight: bold;
// }

// .txt-italic {
//     font-style: italic;
// }